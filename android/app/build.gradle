def buildAsLibrary = project.hasProperty('BUILD_AS_LIBRARY')
def buildAsApplication = !buildAsLibrary
if (buildAsApplication) {
    apply plugin: 'com.android.application'

}
else {
    apply plugin: 'com.android.library'
}

android {
    sourceSets {
        main {
            assets.srcDirs += ['../../res']
        }
    }

    buildToolsVersion "31.0.0"
    compileSdkVersion 31
    ndkVersion "23.1.7779620"

    defaultConfig {
        if (buildAsApplication) {
            applicationId "org.libsdl.totalgb"
        }
        minSdkVersion 19
        targetSdkVersion 31
        versionCode(getBuildVersionCode())
        versionName "${getVersion()}"
        externalNativeBuild {
            cmake {
                arguments '-DCMAKE_BUILD_TYPE=RelWithDebInfo', '-DGB_SINGLE_FILE=ON', '-DPLATFORM_SDL2=ON'
                 abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
        }
    }
    if (!project.hasProperty('EXCLUDE_NATIVE_LIBS')) {
        sourceSets.main {
            jniLibs.srcDir 'libs'
        }
        externalNativeBuild {
            cmake {
                version "3.18.0+"
                path '../../CMakeLists.txt'
            }
        }
    }
    lintOptions {
        abortOnError false
    }

    if (buildAsLibrary) {
        libraryVariants.all { variant ->
            variant.outputs.each { output ->
                def outputFile = output.outputFile
                if (outputFile != null && outputFile.name.endsWith(".aar")) {
                    def fileName = "org.libsdl.totalgb.aar"
                    output.outputFile = new File(outputFile.parent, fileName)
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.documentfile:documentfile:1.0.1'
    implementation 'androidx.preference:preference:1.1.1'
    implementation 'androidx.appcompat:appcompat:1.4.0'
    implementation 'com.google.android.material:material:1.4.0'
}

// the below is taken from dolphin-emu (thanks!)
// https://github.com/dolphin-emu/dolphin/blob/5d11dc1926a7c76d8cfcd11d995e24244bdd7e71/Source/Android/app/build.gradle#L117
def getVersion() {
    def versionNumber = '0.0'

    try {
        versionNumber = 'git describe --always --long'.execute([], project.rootDir).text
                .trim()
                .replaceAll(/(-0)?-[^-]+$/, "")
    } catch (Exception e) {
        logger.error(e + ': Cannot find git, defaulting to dummy version number')
    }

    return versionNumber
}


def getBuildVersionCode() {
    try {
        def versionNumber = 'git rev-list --first-parent --count HEAD'.execute([], project.rootDir).text
                .trim()
        return Integer.valueOf(versionNumber)
    } catch (Exception e) {
        logger.error(e + ': Cannot find git, defaulting to dummy version number')
    }

    return 1
}
